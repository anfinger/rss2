"""
Django settings for rss2 project.

Generated by 'django-admin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from django.conf import settings

#os.environ['DJANGO_SETTINGS_MODULE'] = 'rss2.settings.production'

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3+^l!tg8b3hf)iii=05g$ij_(cjag@(w(k)g(@+t)7jwm5e#)3'

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = (
    #'suit',
    #'tabbed_admin',
    #'front',
    'inplaceeditform',
    'grappelli',
    'easy_thumbnails',
    'filer',
    'mptt',
    'filebrowser',
    'nested_admin',
    'django.contrib.contenttypes',
    #'grappelli.dashboard',
    #'super_inlines',
    #'super_inlines.grappelli_integration',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'reisen',
    'fibu',
    'test_without_migrations',
    #'imagestore',
    #'mptt',
    #'media_tree',
)

MIDDLEWARE_CLASSES = (
    #'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    #'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'rss2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
                'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.core.context_processors.request',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
            ],
        },
    },
]

WSGI_APPLICATION = 'rss2.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'de-de'

TIME_ZONE = 'Europe/Berlin'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = "./static/"

LOGIN_REDIRECT_URL = '/'

MEDIA_ROOT = '/var/www/reiseservice-schwerin/rss2/media/'
#MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'

TABBED_ADMIN_USE_JQUERY_UI = True

GRAPPELLI_ADMIN_TITLE = 'Reiseservice Schwerin GmbH'

GRAPPELLI_SWITCH_USER = True

#FILEBROWSER_DIRECTORY = 'media/'

#DIRECTORY = getattr(settings, "FILEBROWSER_DIRECTORY", 'media/')

#FILEBROWSER_DEBUG = True

#DIRECTORY = '/var/www/reiseservice-schwerin/rss2/media/'

FILEBROWSER_DIRECTORY = ''

THUMBNAIL_HIGH_RESOLUTION = True

THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    #'easy_thumbnails.processors.scale_and_crop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters',
)

#site.directory = 'media/'

#DIRECTORY = getattr(settings, "FILEBROWSER_DIRECTORY", 'uploads/')

FILEBROWSER_VERSIONS_BASEDIR = MEDIA_ROOT + '_versionen/'
#FILEBROWSER_VERSIONS_BASEDIR = '_versions/'

#DEBUG_TOOLBAR_PATCH_SETTINGS = False

#INTERNAL_IPS = ['127.0.0.1','::1',]

#class DisableMigrations(object):
#
#    def __contains__(self, item):
#        return True
#
#    def __getitem__(self, item):
#        return "notmigrations"
#
#
#TESTS_IN_PROGRESS = False
#if 'test' in sys.argv[1:] or 'jenkins' in sys.argv[1:]:
#    logging.disable(logging.CRITICAL)
#    PASSWORD_HASHERS = (
#        'django.contrib.auth.hashers.MD5PasswordHasher',
#    )
#    DEBUG = False
#    TEMPLATE_DEBUG = False
#    OWSER_DEBUG=TrueS = True
#    MIGRATION_MODULES = DisableMigrations()


#INPLACEEDIT_EDIT_EMPTY_VALUE = 'Doppelklick zum editieren'
#INPLACEEDIT_AUTO_SAVE = True
#INPLACEEDIT_EVENT = "dblclick"
#INPLACEEDIT_DISABLE_CLICK = True  # For inplace edit text into a link tag
#INPLACEEDIT_EDIT_MESSAGE_TRANSLATION = 'Schreiben Sie eine Uebersetzung' # transmeta option
#INPLACEEDIT_SUCCESS_TEXT = 'Erfolgreich gespeichert!'
#INPLACEEDIT_UNSAVED_TEXT = 'Sie haben ungesicherte Aenderungen!'
#INPLACE_ENABLE_CLASS = 'enable'
#DEFAULT_INPLACE_EDIT_OPTIONS = {} # dictionnary of the optionals parameters that the templatetag can receive to change its behavior (see the Advanced usage section)
#DEFAULT_INPLACE_EDIT_OPTIONS_ONE_BY_ONE = True # modify the behavior of the DEFAULT_INPLACE_EDIT_OPTIONS usage, if True then it use the default values not specified in your template, if False it uses these options only when the dictionnary is empty (when you do put any options in your template)
#ADAPTOR_INPLACEEDIT_EDIT = 'app_name.perms.MyAdaptorEditInline' # Explain in Permission Adaptor API
#ADAPTOR_INPLACEEDIT = {'myadaptor': 'app_name.fields.MyAdaptor'} # Explain in Adaptor API
#INPLACE_GET_FIELD_URL = None # to change the url where django-inplaceedit use to get a field
#INPLACE_SAVE_URL = None # to change the url where django-inplaceedit use to save a field
